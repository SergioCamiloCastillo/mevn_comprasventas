{"remainingRequest":"/home/sergio/idev/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sergio/idev/frontend/src/components/admin/Ingresos.vue?vue&type=template&id=9126605c&","dependencies":[{"path":"/home/sergio/idev/frontend/src/components/admin/Ingresos.vue","mtime":1610235809854},{"path":"/home/sergio/idev/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sergio/idev/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sergio/idev/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sergio/idev/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}